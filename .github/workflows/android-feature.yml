name: Android Feature
on:
  push:
    branches: [ master, release/*, test_product_flavour ]
  pull_request:
    branches: [ master, release/* ]

jobs:
  build:
    runs-on:  Ubuntu-20.04
    steps:
      - name: Checkout
        uses: actions/checkout@v2.3.4
      - name: Setup Java JDK
        uses: actions/setup-java@v1.4.3
        with:
          java-version: 1.8

      - name: Install NDK
        run: echo "y" | sudo /usr/local/lib/android/sdk/tools/bin/sdkmanager --install "ndk;20.0.5594570" --sdk_root=${ANDROID_SDK_ROOT}


      - name: Restore Cache
        uses: actions/cache@v2
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*') }}
          restore-keys: |
            ${{ runner.os }}-gradle-

      - name: Make Gradle executable
        run: chmod +x ./gradlew

      - name: Clean
        run: ./gradlew clean --stacktrace

      - name: Run Test
        run: ./gradlew test

      - name: Build with Gradle
        run: ./gradlew build

      - name: Build Project
        run: ./gradlew assemble

      - name: Upload a Build Artifact
        uses: actions/upload-artifact@v2.2.1
        with:
          name: App
          path: app/build/outputs/apk/android/debug/com.iniyan.githubactionexample-1.0.1-android-debug.apk

#
#        ## Build all our Build Types at once ##
#      - name: Build all artifacts
#        id: buildAllApks
#        uses: eskatos/gradle-command-action@v1.3.3
#        with:
#          gradle-version: current
#          wrapper-cache-enabled: true
#          dependencies-cache-enabled: true
#          configuration-cache-enabled: true
#          arguments: assembleAndroidDebug

#      - name: Upload APK
#        uses: actions/upload-artifact@v2
#        with:
#          name: Application Apk
#          path: ${{ github.workspace }}/app/build/outputs/apk/debug/com.iniyan.githubactionexample-1.0.1-debug.apk

#      - name: Running build command
#        run: ./gradlew bundleRelease
#      - name: Uploading build
#        uses: actions/upload-artifact@v2
#        with:
#          name: bundle
#          path: app/build/outputs/bundle/release/com.iniyan.githubactionexample-1.0.1-release.aab


      - name: Decode google-services.json
        env:
          FIREBASE_CONFIG: ${{ secrets.FIREBASE_CONFIG }}
        run: echo $FIREBASE_CONFIG > app/google-services.json
      # Step to Install the NDK
      - name: Install NDK
        run: echo "y" | sudo ${ANDROID_HOME}/tools/bin/sdkmanager --install "ndk;20.0.5594570"
      # Step to Build the Project and generate the APK
      - name: build debug apk
        run: ./gradlew assembleDebug

      - name: build release
        run: ./gradlew assembleRelease
      - name: upload artifact to Firebase App Distribution
        uses: wzieba/Firebase-Distribution-Github-Action@v1.2.1
        with:
          appId: ${{ secrets.FIREBASE_APP_ID }}
          token: ${{ secrets.FIREBASE_TOKEN }}
          groups: testers
          file: app/build/outputs/apk/release/com.iniyan.githubactionexample-1.0.1-release-unsigned.apk


      - uses: r0adkll/sign-android-release@v1
        name: Sign app APK
        id: sign_app
        with:
          releaseDirectory: app/build/outputs/apk/release
          signingKeyBase64: ${{ secrets.SIGNING_KEY }}
          alias: ${{ secrets.ALIAS }}
          keyStorePassword: ${{ secrets.KEY_STORE_PASSWORD }}
          keyPassword: ${{ secrets.KEY_PASSWORD }}
        env:
          BUILD_TOOLS_VERSION: "29.0.1"
      - uses: actions/upload-artifact@v2
        with:
          name: Signed app bundle
          path: ${{steps.sign_app.outputs.signedReleaseFile}}

name: Build Release

# Step 1: Choose the branch or branches you want to run this workflow
# Whenever A Code Pushed into master Branch
on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:
  build:

    name: Release Build Check
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2
      - name: set up JDK 1.8
        uses: actions/setup-java@v1
        with:
          java-version: 1.8

      - name: Unit tests
        run: bash ./gradlew test --stacktrace


            # Step 3: Check the code with Android linter
      - name: Run Android Linter
        run: ./gradlew lintDebug

            # Step 4: Yun your unit tests
      - name: Run Unit Tests
        run: ./gradlew testdebugUnitTest

            # Step 5: Assemble debug apk to send to firebase test lab
      - name: Assemble Debug APK
        run: ./gradlew assembleDebug

            # Step 6: Assemble debug test apk to send to firebase test lab
      - name: Assemble Debug Test APK
        run: ./gradlew assembleDebugAndroidTest


      - name: Build Debug APK
        run: bash ./gradlew :app:assembleDebug

      - name: Upload APK
        uses: actions/upload-artifact@v2
        with:
          name: Application Apk
          path: ${{ github.workspace }}/app/build/outputs/apk/debug/com.iniyan.githubactionexample-1.0.1-debug.apk




      name: Make Gradle executable
        run: chmod +x ./gradlew
          - name: Build with Gradle
            run: ./gradlew build
          - name: Build Debug APK
            run: ./gradlew assembleDebug
          - name: Releasing using Hub
            uses: ShaunLWM/action-release-debugapk@master
            env:
              GITHUB_TOKEN: ${{ secrets.TOKEN_GRADLE_APK }}
              APP_FOLDER: app
              RELEASE_TITLE: New Build
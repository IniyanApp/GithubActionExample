name: Manual Generate APK
on:
  push:
    branches: [ '*_CI' ]
  pull_request:
    branches: [ '*_CI' ]
  workflow_dispatch:

    inputs:
      baseUrl:
        description: 'Front End Base URL'
        required: true
        default: 'https://qa4.buynsta.com/'

      apiUrl:
        description: 'Back End Base URL'
        required: true
        default: 'https://j8s51w4tyf.execute-api.ap-south-1.amazonaws.com/'

      gateway:
        description: 'App Gateway'
        required: true
        default: 'q4'

      appType:
        description: 'App Type'
        default: 'assembleAndroidStaging'

jobs:
  apk:
    name: Generate Debug APK
    runs-on: ubuntu-18.04

    steps:
      - uses: actions/checkout@v1
      - name: Set up JDK 1.8
        uses: actions/setup-java@v1
        with:
          java-version: 1.8


      - name: Install NDK
        run: echo "y" | sudo /usr/local/lib/android/sdk/tools/bin/sdkmanager --install "ndk;20.0.5594570" --sdk_root=${ANDROID_SDK_ROOT}


      - name: Restore Cache
        uses: actions/cache@v2
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*') }}
          restore-keys: |
            ${{ runner.os }}-gradle-

      - name: Make Gradle executable
        run: chmod +x ./gradlew


      - name: Upload APK
        uses: actions/upload-artifact@v2
        with:
          name: KB Custom Generation Apk
          path: ${{ github.workspace }}/app/build/outputs/apk/*/*/**.apk

      - name: Print Params Values
        run: |
          bash '/GithubActionExample/update_properties.sh' ${{ github.event.inputs.baseUrl }} ${{ github.event.inputs.apiUrl }} ${{ github.event.inputs.gateway }} ${{ github.event.inputs.appType }}
      - name: Assemble app debug APK
        run: bash ./gradlew assembleDebug --stacktrace

      - name: Upload app APK
        uses: actions/upload-artifact@v1
        with:
          name: app-stage
          path: app/build/outputs/apk/*/**.apk



name: Android Testing Workflow

# Step 1: Choose the branch or branches you want to run this workflow
on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:
  testing:
    name: Android Lint Check and Testing

    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v1
      - name: Set up JDK 1.8
        uses: actions/setup-java@v1
        with:
          java-version: 1.8
      - name: Unit tests
        run: bash ./gradlew test --stacktrace


      # Step 2: Check the code with ktlint, you can remove this job if you don't use ktlint
      - name: Run Kotlin Linter
        run: ./gradlew lintDebug

      # Step 3: Check the code with Android linter
      - name: Run Android Linter
        run: ./gradlew lintDebug

      # Step 4: Yun your unit tests
      - name: Run Unit Tests
        run: ./gradlew testdebugUnitTest

      # Step 5: Assemble debug apk to send to firebase test lab
      - name: Assemble Debug APK
        run: ./gradlew assembleDebug

      # Step 6: Assemble debug test apk to send to firebase test lab
      - name: Assemble Debug Test APK
        run: ./gradlew assembleDebugAndroidTest
  build:
      name: Generate APK
      runs-on: ubuntu-latest
      steps:
        - uses: actions/checkout@v2
        - name: set up JDK 1.8
          uses: actions/setup-java@v1
          with:
            java-version: 1.8
        - name: Build Debug APK
          run: bash ./gradlew :app:assembleDebug

        - name: Upload APK
          uses: actions/upload-artifact@v2
          with:
            name: App
            path: ${{ github.workspace }}/app/build/outputs/apk/debug/app-debug.apk
